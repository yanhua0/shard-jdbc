<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shard.jdbc.mapper.TableOneMapper" >
  <resultMap id="BaseResultMap" type="com.shard.jdbc.entity.TableOne" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="back_one" property="backOne" jdbcType="VARCHAR" />
    <result column="back_two" property="backTwo" jdbcType="VARCHAR" />
    <result column="back_three" property="backThree" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, phone, back_one, back_two, back_three
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shard.jdbc.entity.TableOneExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from table_one
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from table_one
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectOneByPhone" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from table_one
    where phone = #{phone}
    limit 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from table_one
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shard.jdbc.entity.TableOneExample" >
    delete from table_one
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shard.jdbc.entity.TableOne" useGeneratedKeys="true" keyProperty="id" >
    insert into table_one (phone, back_one, back_two, 
      back_three)
    values (#{phone,jdbcType=VARCHAR}, #{backOne,jdbcType=VARCHAR}, #{backTwo,jdbcType=VARCHAR}, 
      #{backThree,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shard.jdbc.entity.TableOne" useGeneratedKeys="true" keyProperty="id" >
    insert into table_one
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="phone != null" >
        phone,
      </if>
      <if test="backOne != null" >
        back_one,
      </if>
      <if test="backTwo != null" >
        back_two,
      </if>
      <if test="backThree != null" >
        back_three,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="backOne != null" >
        #{backOne,jdbcType=VARCHAR},
      </if>
      <if test="backTwo != null" >
        #{backTwo,jdbcType=VARCHAR},
      </if>
      <if test="backThree != null" >
        #{backThree,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shard.jdbc.entity.TableOneExample" resultType="java.lang.Integer" >
    select count(*) from table_one
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="table" resultType="com.shard.jdbc.entity.TableOne">
      select *from table_one where phone  in
      <foreach collection="list" item="list" separator="," open="(" close=")">
      #{list}
      </foreach>
    </select>
  <select id="selectCount" resultType="java.lang.Integer">
    select count(*) from table_one
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update table_one
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.backOne != null" >
        back_one = #{record.backOne,jdbcType=VARCHAR},
      </if>
      <if test="record.backTwo != null" >
        back_two = #{record.backTwo,jdbcType=VARCHAR},
      </if>
      <if test="record.backThree != null" >
        back_three = #{record.backThree,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update table_one
    set id = #{record.id,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      back_one = #{record.backOne,jdbcType=VARCHAR},
      back_two = #{record.backTwo,jdbcType=VARCHAR},
      back_three = #{record.backThree,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shard.jdbc.entity.TableOne" >
    update table_one
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="backOne != null" >
        back_one = #{backOne,jdbcType=VARCHAR},
      </if>
      <if test="backTwo != null" >
        back_two = #{backTwo,jdbcType=VARCHAR},
      </if>
      <if test="backThree != null" >
        back_three = #{backThree,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shard.jdbc.entity.TableOne" >
    update table_one
    set phone = #{phone,jdbcType=VARCHAR},
      back_one = #{backOne,jdbcType=VARCHAR},
      back_two = #{backTwo,jdbcType=VARCHAR},
      back_three = #{backThree,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>